{"version":3,"file":"aja.js","sources":["../src/utils/util.ts","../src/utils/p.ts","../src/store.ts","../src/utils/exp.ts","../src/classes/binding-if-builder.ts","../src/classes/binding-for-builder.ts","../src/pipes/pipes.ts","../src/classes/binding-text-builder.ts","../src/classes/aja-model.ts","../src/classes/binding-model-builder.ts","../src/aja.ts"],"sourcesContent":["export function createRoot(view: string | HTMLElement): HTMLElement | null {\r\n  return typeof view === \"string\"\r\n    ? document.querySelector<HTMLElement>(view)\r\n    : view;\r\n}\r\n\r\nexport function createObject<T>(obj?: T): T {\r\n  return obj ? obj : ({} as T);\r\n}\r\n\r\nexport function toArray<T>(iterable: Iterable<T> | ArrayLike<T>): T[] {\r\n  if (!iterable) return [];\r\n  if (Array.from) {\r\n    return Array.from<T>(iterable);\r\n  } else {\r\n    return Array.prototype.slice.call(iterable) as T[];\r\n  }\r\n}\r\n\r\nexport const emptyString: string = \"\";\r\n\r\n/**\r\n * setAge( obj.age   , '        ') -> [\"obj.age   \", \" '        '\"]\r\n * @param str\r\n */\r\nexport function parseTemplateEventArgs(str: string) {\r\n  let index = str.indexOf(\"(\");\r\n  return str\r\n    .substr(index, str.length - 2)\r\n    .replace(/(^\\(*)|(\\)$)/g, emptyString)\r\n    .trim()\r\n    .split(\",\");\r\n}\r\n\r\n/**\r\n * * 避免使用全局的eval\r\n * @param this\r\n * @param bodyString\r\n */\r\nexport function ourEval(this: any, bodyString: string): any {\r\n  const f = new Function(bodyString);\r\n  try {\r\n    return f.apply(this, arguments);\r\n  } catch (er) {\r\n    throw er;\r\n  }\r\n}\r\n\r\n/**\r\n * Object.prototype.toString.call({}) -> \"[object Object]\"\r\n * @param data\r\n */\r\nexport function dataTag(data: any): string {\r\n  return Object.prototype.toString.call(data);\r\n}\r\n\r\n/**\r\n * 把字符串安全格式化 为正则表达式源码\r\n * {{ arr[0] }} -> \\{\\{ arr\\[0\\] \\}\\}\r\n * @param str\r\n */\r\nexport function escapeRegExp(str: string) {\r\n  return str.replace(/([-.*+?^${}()|[\\]\\/\\\\])/g, \"\\\\$1\");\r\n}\r\n\r\nexport function escapeHTML(str: string) {\r\n  return str\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\\s/g, \"&nbsp;\");\r\n}\r\n\r\n/**\r\n * * 将['on']转为[null]\r\n * @param checkbox\r\n */\r\nexport function getCheckboxRadioValue(\r\n  checkbox: HTMLInputElement\r\n): string | null {\r\n  let value: string | null = checkbox.value;\r\n  if (value === \"on\") value = null;\r\n  return value;\r\n}\r\n\r\n/**\r\n * 查找一个节点是否包含:if指令\r\n * 并返回\r\n */\r\nexport function hasIfAttr(\r\n  node: HTMLElement,\r\n  ifInstruction: string\r\n): Attr | undefined {\r\n  if (node.attributes && node.attributes.length) {\r\n    const attrs = Array.from(node.attributes);\r\n    return attrs.find(({ name }) => name === ifInstruction);\r\n  }\r\n}\r\n\r\n/**\r\n * 查找一个节点是否包含:if指令\r\n * 并返回\r\n */\r\nexport function hasForAttr(\r\n  node: HTMLElement,\r\n  forInstruction: string\r\n): Attr | undefined {\r\n  if (node.attributes && node.attributes.length) {\r\n    const attrs = Array.from(node.attributes);\r\n    return attrs.find(({ name }) => name === forInstruction);\r\n  }\r\n}\r\n\r\n/**\r\n * 查找一个节点是否包含[(model)]指令\r\n * 并返回\r\n */\r\nexport function hasModelAttr(\r\n  node: HTMLElement,\r\n  modelAttr: string\r\n): Attr | undefined {\r\n  if (node.attributes && node.attributes.length) {\r\n    const attrs = toArray(node.attributes);\r\n    return attrs.find(({ name }) => name === modelAttr);\r\n  }\r\n}\r\n\r\n/**\r\n * * 从表达式中获取管道\r\n * 抽空格，在分离 |\r\n * @returns [ bindKey, Pipes[] ]\r\n */\r\nexport function parsePipe(key: string): [string, string[]] {\r\n  const [bindKey, ...pipes] = key\r\n    .replace(/[\\s]/g, \"\")\r\n    .split(/(?<![\\|])\\|(?![\\|])/);\r\n  return [bindKey, pipes];\r\n}\r\n","import { dataTag } from \"./util\";\r\n\r\n/**\r\n * * 谓词\r\n */\r\n\r\n/**\r\n * [title]=\"title\"\r\n * @param value\r\n */\r\nexport function attrp(value: string) {\r\n  return /^\\[\\w.+\\]$/.test(value);\r\n}\r\n\r\n/**\r\n * (click)=\"hello('hello')\"\r\n */\r\nexport function eventp(value: string) {\r\n  return /^\\(\\w.+\\)$/.test(value);\r\n}\r\n\r\n/**\r\n * #input 模板变量\r\n * @param value\r\n */\r\nexport function tempvarp(value: string) {\r\n  return value.charAt(0) === \"#\";\r\n}\r\n\r\nexport function numberp(str: string | number): boolean {\r\n  if (typeof str === \"number\") return true;\r\n  if (str && !str.trim()) return false;\r\n  return !isNaN(+str);\r\n}\r\n\r\n/**\r\n * 'false' || 'true'\r\n * @param str\r\n */\r\nexport function boolStringp(str: string): boolean {\r\n  return str === \"true\" || str === \"false\";\r\n}\r\n\r\nexport function objectp(data: any) {\r\n  return dataTag(data) === \"[object Object]\";\r\n}\r\n\r\nexport function arrayp(data: any) {\r\n  return dataTag(data) === \"[object Array]\";\r\n}\r\n\r\nexport function nullp(data: any) {\r\n  return dataTag(data) === \"[object Null]\";\r\n}\r\n\r\nexport function elementNodep(node: ChildNode | HTMLElement): boolean {\r\n  return node.nodeType === Node.ELEMENT_NODE;\r\n}\r\n\r\n// 模板节点 template\r\nexport function fragmentNodep(node: ChildNode | HTMLElement): boolean {\r\n  return node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n}\r\n\r\nexport function textNodep(node: ChildNode | HTMLElement): boolean {\r\n  return node.nodeType === Node.TEXT_NODE;\r\n}\r\n/**\r\n * * <template> 模板节点\r\n * @param node\r\n */\r\nexport function templatep(node: HTMLElement): boolean {\r\n  return node.nodeName === \"TEMPLATE\";\r\n}\r\n\r\nexport function inputp(node: Node) {\r\n  return node.nodeName === \"INPUT\";\r\n}\r\nexport function textareap(node: Node) {\r\n  return node.nodeName === \"TEXTAREA\";\r\n}\r\n\r\nexport function selectp(node: Node) {\r\n  return node.nodeName === \"SELECT\";\r\n}\r\n\r\nexport function checkboxp(node: HTMLInputElement) {\r\n  return node.type === \"checkbox\";\r\n}\r\n\r\nexport function radiop(node: HTMLInputElement) {\r\n  return node.type === \"radio\";\r\n}\r\n","import { arrayp, objectp } from \"./utils/p\";\r\nimport { toArray } from \"./utils/util\";\r\n\r\nconst l = console.log;\r\n\r\n/**\r\n * state 对象\r\n */\r\nexport interface State {\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * 事件函数\r\n */\r\nexport interface Actions {\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * 计算函数\r\n */\r\nexport interface Computeds {\r\n  [key: string]: Function;\r\n}\r\n\r\nexport interface StoreOptions {\r\n  state: State;\r\n  actions?: Actions;\r\n  computeds?: Computeds;\r\n  context?: any;\r\n}\r\n\r\nexport interface ListenerStateListInterface {\r\n  (): any[];\r\n}\r\n\r\nexport interface CbListInterface {\r\n  (state: any[]): void;\r\n}\r\n\r\nexport interface ReactionListenersInterface {\r\n  listenerStateList: ListenerStateListInterface;\r\n  cb: CbListInterface;\r\n}\r\n\r\nconst reactionListeners: ReactionListenersInterface[] = [];\r\nfunction reactionUpdate(some: any) {\r\n  for (const reactionItem of reactionListeners) {\r\n    const stateList: any[] = reactionItem.listenerStateList();\r\n    l(some, stateList[0], stateList.some(e => e === some));\r\n    if (stateList.some(e => e === some)) {\r\n      reactionItem.cb(stateList);\r\n    }\r\n  }\r\n}\r\n/**\r\n * * 监听指定属性的变更\r\n * @param listenerStateList\r\n * @param cb\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * let store = new Store({\r\n *    state: {\r\n *      name: 22,\r\n *      age: 22\r\n *    }\r\n *  });\r\n *\r\n *  reaction(\r\n *    () => [store.name],\r\n *    state => {\r\n *      l(state); // [\"ajanuw\"]\r\n *    }\r\n *  );\r\n *\r\n *  store.age = 12;\r\n *  store.name = \"ajanuw\";\r\n * ```\r\n */\r\nexport function reaction(\r\n  listenerStateList: ListenerStateListInterface,\r\n  cb: CbListInterface\r\n) {\r\n  cb(listenerStateList());\r\n  reactionListeners.push({\r\n    listenerStateList,\r\n    cb\r\n  });\r\n}\r\n\r\nconst autorunListeners: Function[] = [];\r\nfunction autorunUpdate() {\r\n  for (const f of autorunListeners) {\r\n    f();\r\n  }\r\n}\r\n/**\r\n * * 任意一个属性的变化，都会触发所有的监听事件\r\n * @param f\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * let store = new Store({\r\n *    state: {\r\n *      name: 22,\r\n *      age: 22\r\n *    }\r\n *  });\r\n *\r\n *  autorun(() => {\r\n *      l('state change'); // x 3\r\n *    }\r\n *  );\r\n *\r\n *  store.age = 12;\r\n *  store.name = \"ajanuw\";\r\n * ```\r\n */\r\nexport const autorun = (f: Function) => {\r\n  f();\r\n  autorunListeners.push(f);\r\n};\r\n\r\nexport class Store {\r\n  public $actions!: Actions;\r\n\r\n  /**\r\n   *\r\n   * @param state 需要代理的数据\r\n   */\r\n  constructor({ state, computeds, actions }: StoreOptions) {\r\n    Store.map(state, this);\r\n\r\n    if (computeds) {\r\n      for (const k in computeds) {\r\n        Object.defineProperty(this, k, {\r\n          get() {\r\n            return computeds[k].call(this);\r\n          },\r\n          enumerable: true\r\n        });\r\n      }\r\n    }\r\n\r\n    // 只把actions绑定在store上\r\n    if (actions) {\r\n      this.$actions = actions;\r\n      // 在actions中调用this.m()\r\n      Object.assign(this, actions);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * * 代理每个属性的 get， set\r\n   */\r\n  static map(object: State, context = {}): {} {\r\n    for (const k in object) {\r\n      Object.defineProperty(context, k, {\r\n        get() {\r\n          let v = object[k];\r\n\r\n          if (arrayp(v)) {\r\n            v = Store.list(v);\r\n          }\r\n\r\n          if (objectp(v)) {\r\n            v = Store.map(v);\r\n          }\r\n          return v;\r\n        },\r\n        set(newValue) {\r\n          // 设置了同样的值， 将跳过\r\n          if (newValue === object[k]) return;\r\n          object[k] = newValue;\r\n          autorunUpdate();\r\n          reactionUpdate(object[k]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n      });\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  /**\r\n   * * 拦截数组的非幕等方, 并循环代理每个元素\r\n   * @param array\r\n   */\r\n  static list(array: any[]): any[] {\r\n    const resriteMethods = [\r\n      \"push\",\r\n      \"pop\",\r\n      \"shift\",\r\n      \"unshift\",\r\n      \"splice\",\r\n      \"sort\",\r\n      \"reverse\"\r\n    ];\r\n\r\n    const proto = Object.create(Array.prototype);\r\n\r\n    resriteMethods.forEach(m => {\r\n      const original = (proto as { [k: string]: any })[m];\r\n      Object.defineProperty(proto, m, {\r\n        value: function(...args: any[]) {\r\n          const r = original.apply(this, args);\r\n          // 跟新\r\n          autorunUpdate();\r\n          reactionUpdate(this);\r\n          return r;\r\n        },\r\n        writable: true, // value才能被赋值运算符改变 =\r\n        configurable: true, // 能改变，删除\r\n        enumerable: false // 可被枚举 for(let i in o)\r\n      });\r\n    });\r\n    Object.setPrototypeOf(array, proto);\r\n\r\n    // 遍历代理数组每项的值\r\n    array = (array as any[]).map(el => {\r\n      if (objectp(el)) {\r\n        return Store.map(el);\r\n      }\r\n      if (arrayp(el)) {\r\n        return Store.list(el);\r\n      }\r\n      return el;\r\n    });\r\n\r\n    return array;\r\n  }\r\n}\r\n","//* 匹配 {{ name }} {{ obj.age }}\r\n// export const interpolationExpressionExp = /{{([\\w\\s\\.][\\s\\w\\.]+)}}/g;\r\nexport const interpolationExpressionExp = /{{(.*?)}}/g;\r\n\r\n\r\n//* 匹配空格\r\nexport const spaceExp = /\\s/g;\r\n\r\n//* !!hide\r\nexport const firstWithExclamationMarkExp = /^!*/;\r\n\r\nexport const attrStartExp = /^\\[/;\r\nexport const attrEndExp = /\\]$/;\r\n\r\nexport const eventStartExp = /^\\(/;\r\nexport const eventEndExp = /\\)$/;\r\n\r\nexport const tempvarExp = /^#/;\r\n\r\nexport const firstAllValue = /^./;\r\nexport const endAllValue = /.$/;\r\n","import { hasIfAttr, templatep } from \"../utils/util\";\r\n\r\nexport class BindingIfBuilder {\r\n  /**\r\n   * * 一个注释节点\r\n   */\r\n  commentNode: Comment | undefined;\r\n\r\n  ifAttr: Attr | undefined;\r\n\r\n  constructor(public node: HTMLElement, ifInstruction: string) {\r\n    let ifAttr = hasIfAttr(node, ifInstruction);\r\n    if (!ifAttr) return;\r\n    this.ifAttr = ifAttr;\r\n    this.commentNode = document.createComment(\"\");\r\n    this.node.before(this.commentNode);\r\n    this.node.removeAttribute(ifInstruction);\r\n  }\r\n\r\n  /**\r\n   * * 只有存在if指令，其他的方法和属性才生效\r\n   */\r\n  get hasIfAttr() {\r\n    return !!this.ifAttr;\r\n  }\r\n\r\n  get value(): string | undefined {\r\n    if (this.hasIfAttr) {\r\n      return this.ifAttr!.value.trim();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * * 这里使用了回调把template标签给渲染了\r\n   * @param show\r\n   */\r\n  checked(show: boolean) {\r\n    if (!this.commentNode) return;\r\n    if (show) {\r\n      this.commentNode.after(this.node);\r\n    } else {\r\n      this.node.replaceWith(this.commentNode);\r\n    }\r\n    this.commentNode.data = this._createIfCommentData(show);\r\n  }\r\n\r\n  private _createIfCommentData(value: any): string {\r\n    return `{\":if\": \"${!!value}\"}`;\r\n  }\r\n}\r\n","import { emptyString, hasForAttr, parsePipe } from \"../utils/util\";\r\nimport { eventStartExp, eventEndExp } from \"../utils/exp\";\r\nimport { numberp, arrayp } from \"../utils/p\";\r\n\r\nexport class BindingForBuilder {\r\n  /**\r\n   * * 一个注释节点\r\n   */\r\n  private commentNode: Comment | undefined;\r\n\r\n  private fragment: DocumentFragment | undefined;\r\n  private forBuffer: Node[] = [];\r\n\r\n  forAttr: Attr | undefined;\r\n\r\n  constructor(public node: HTMLElement, public forInstruction: string) {\r\n    let forAttr = hasForAttr(node, forInstruction);\r\n    // 没有for指令，就不构建下去了\r\n    if (!forAttr) return;\r\n    this.forAttr = forAttr;\r\n    this.commentNode = document.createComment(\"\");\r\n    this.fragment = document.createDocumentFragment();\r\n    node.replaceWith(this.commentNode);\r\n    node.removeAttribute(forInstruction);\r\n  }\r\n\r\n  get hasForAttr() {\r\n    return !!this.forAttr;\r\n  }\r\n\r\n  private get forAttrValue(): {\r\n    variable: string;\r\n    variables: string[];\r\n    bindData: string;\r\n    pipes: string[];\r\n  } | null {\r\n    if (!this.forAttr) return null;\r\n    let [variable, bindData] = this.forAttr.value\r\n      .split(/\\bin\\b/)\r\n      .map(s => s.trim());\r\n    const variables: string[] = variable\r\n      .trim()\r\n      .replace(eventStartExp, emptyString)\r\n      .replace(eventEndExp, emptyString)\r\n      .split(\",\")\r\n      .map(v => v.trim());\r\n    const p = parsePipe(bindData);\r\n    return {\r\n      variable,\r\n      variables,\r\n      bindData: p[0],\r\n      pipes: p[1]\r\n    };\r\n  }\r\n\r\n  get bindVar(): string | undefined {\r\n    if (this.hasForAttr) {\r\n      return this.forAttrValue!.variable;\r\n    }\r\n  }\r\n  get bindKey(): string | undefined {\r\n    if (this.hasForAttr) {\r\n      return this.forAttrValue!.variables[0];\r\n    }\r\n  }\r\n  get bindValue(): string | undefined {\r\n    if (this.hasForAttr) {\r\n      return this.forAttrValue!.variables[1];\r\n    }\r\n  }\r\n  get bindData(): string | undefined {\r\n    if (this.hasForAttr) {\r\n      return this.forAttrValue!.bindData;\r\n    }\r\n  }\r\n  get isNumberData(): boolean | undefined {\r\n    if (this.hasForAttr) {\r\n      return numberp(this.bindData as string);\r\n    }\r\n  }\r\n  get pipes(): string[] {\r\n    if (this.hasForAttr) {\r\n      return this.forAttrValue?.pipes || [];\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * * 添加一个节点\r\n   * @param item\r\n   */\r\n  add(item: Node) {\r\n    if (this.fragment) {\r\n      this.fragment.append(item);\r\n      this.forBuffer.push(item);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * * 将所有节点插入DOM\r\n   * @param data\r\n   */\r\n  draw(data: any) {\r\n    if (this.commentNode && this.fragment) {\r\n      this.commentNode.after(this.fragment);\r\n      this.commentNode.data = this.createForCommentData(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * * 清除所有节点\r\n   */\r\n  clear() {\r\n    for (const forItem of this.forBuffer) {\r\n      (forItem as HTMLElement).remove();\r\n    }\r\n    this.forBuffer = [];\r\n  }\r\n\r\n  createForContextState(k: any, v: any = null, isNumber: boolean = true): {} {\r\n    const forState = {};\r\n    if (isNumber && this.bindVar) {\r\n      Object.defineProperty(forState, this.bindVar, {\r\n        get() {\r\n          return k;\r\n        }\r\n      });\r\n    } else {\r\n      if (this.bindKey && this.bindValue) {\r\n        Object.defineProperties(forState, {\r\n          [this.bindKey]: {\r\n            get() {\r\n              return k;\r\n            }\r\n          },\r\n          [this.bindValue]: {\r\n            get() {\r\n              return v;\r\n            }\r\n          }\r\n        });\r\n      } else if (this.bindKey) {\r\n        Object.defineProperties(forState, {\r\n          [this.bindKey]: {\r\n            get() {\r\n              return v;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return forState;\r\n  }\r\n\r\n  private createForCommentData(obj: any): string {\r\n    let data = obj;\r\n    if (arrayp(data)) {\r\n      data = obj.slice(0, 6);\r\n    }\r\n    return `{\":for\": \"${data}\"}`;\r\n  }\r\n\r\n  createItem() {\r\n    const item = this.node.cloneNode(true);\r\n    this.add(item);\r\n    return item;\r\n  }\r\n}\r\n","import { numberp } from \"../utils/p\";\r\nimport { GetDataCallBack } from \"../aja\";\r\n\r\nexport interface Pipe {\r\n  (...value: any[]): any;\r\n}\r\n\r\nexport interface Pipes {\r\n  [pipeName: string]: Pipe;\r\n}\r\n\r\nexport const pipes: Pipes = {\r\n  /**\r\n   * * 全部大写\r\n   * @param value\r\n   */\r\n  uppercase(value: string) {\r\n    return value.toUpperCase();\r\n  },\r\n\r\n  /**\r\n   * * 全部小写\r\n   * @param value\r\n   */\r\n  lowercase(value: string) {\r\n    return value.toLowerCase();\r\n  },\r\n  /**\r\n   * * 首字母小写\r\n   * @param str\r\n   */\r\n  capitalize(str: string) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n  },\r\n\r\n  json(str: string) {\r\n    return JSON.stringify(str, null, \" \");\r\n  },\r\n\r\n  slice(str: string, start: number, end: number) {\r\n    return str.slice(start, end);\r\n  }\r\n};\r\n\r\n// 开始管道加工\r\nexport function usePipes(\r\n  data: any,\r\n  pipeList: string[],\r\n  getData: GetDataCallBack | null\r\n): any {\r\n  let _result = data;\r\n  if (pipeList.length) {\r\n    pipeList.forEach(pipe => {\r\n      const [p, ...pipeArgs] = pipe.split(\":\");\r\n      if (p in pipes) {\r\n        let parsePipeArgs;\r\n        if (getData) {\r\n          parsePipeArgs = pipeArgs.map(arg => {\r\n            if (numberp(arg)) return arg;\r\n            return getData(arg);\r\n          });\r\n        } else {\r\n          parsePipeArgs = pipeArgs;\r\n        }\r\n        _result = pipes[p](_result, ...parsePipeArgs);\r\n      }\r\n    });\r\n  }\r\n  return _result;\r\n}\r\n","import { interpolationExpressionExp, spaceExp } from \"../utils/exp\";\r\nimport { parsePipe } from \"../utils/util\";\r\nimport { usePipes } from \"../pipes/pipes\";\r\nimport { GetDataCallBack } from \"../aja\";\r\n\r\nexport class BindingTextBuilder {\r\n  /**\r\n   * * 保存插值表达式的模板，千万不要改变\r\n   */\r\n  public readonly text: string;\r\n\r\n  /**\r\n   * * 是否需要解析\r\n   */\r\n  get needParse(): boolean {\r\n    return interpolationExpressionExp.test(this.text);\r\n  }\r\n\r\n  constructor(private node: ChildNode) {\r\n    this.text = node.textContent || \"\";\r\n  }\r\n\r\n  setText(getData: GetDataCallBack) {\r\n    const text = this.text.replace(interpolationExpressionExp, (match, g1) => {\r\n      const key = g1.replace(spaceExp, \"\");\r\n      const pipeList = parsePipe(key)[1];\r\n      const data = getData(key);\r\n      const pipeData = usePipes(data, pipeList, arg => getData(arg));\r\n      return pipeData;\r\n    });\r\n    if (text !== this.node.textContent) {\r\n      this.node.textContent = text;\r\n    }\r\n  }\r\n}\r\n","import { Store } from \"../store\";\r\n\r\nexport class AjaModel {\r\n  static classes = {\r\n    // 控件被访问过\r\n    // 一般就是监听blur事件\r\n    touched: \"aja-touched\", // true\r\n    untouched: \"aja-untouched\", // false\r\n\r\n    // 控件的值变化了\r\n    dirty: \"aja-dirty\", // true\r\n    pristine: \"aja-pristine\", // false\r\n\r\n    // 控件的值有效\r\n    valid: \"aja-valid\", // true\r\n    invalid: \"aja-invalid\" // false\r\n  };\r\n\r\n  get model(): string {\r\n    return this.node.value;\r\n  }\r\n\r\n  get name(): any {\r\n    return this.node.name;\r\n  }\r\n\r\n  get value() {\r\n    return this.node.value;\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.node.disabled;\r\n  }\r\n\r\n  get enabled(): boolean {\r\n    return !this.disabled;\r\n  }\r\n\r\n  control: {\r\n    [k: string]: any;\r\n  } = {\r\n    touched: this.node.classList.contains(AjaModel.classes.touched),\r\n    untouched: this.node.classList.contains(AjaModel.classes.untouched),\r\n\r\n    dirty: this.node.classList.contains(AjaModel.classes.dirty),\r\n    pristine: this.node.classList.contains(AjaModel.classes.pristine),\r\n\r\n    valid: this.node.classList.contains(AjaModel.classes.valid),\r\n    invalid: this.node.classList.contains(AjaModel.classes.invalid)\r\n  };\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n  get pristine(): boolean {\r\n    return this.control.pristine;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.control.valid;\r\n  }\r\n  get invalid(): boolean {\r\n    return this.control.invalid;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n  get untouched(): boolean {\r\n    return this.control.untouched;\r\n  }\r\n\r\n  constructor(public node: HTMLInputElement) {\r\n    this.control = Store.map(this.control);\r\n    this._setup();\r\n  }\r\n\r\n  private _setup() {\r\n    // 值发生变化了\r\n    this.node.addEventListener(\"input\", () => {\r\n      this.control.pristine = false;\r\n      this.control.dirty = true;\r\n\r\n      if (this.node.required && this.node.value) {\r\n        // 控件的值有效\r\n        this.control.valid = true;\r\n        this.control.invalid = false;\r\n      } else {\r\n        // 控件的值无效\r\n        this.control.valid = false;\r\n        this.control.invalid = true;\r\n      }\r\n    });\r\n\r\n    // 控件被访问了\r\n    this.node.addEventListener(\"blur\", () => {\r\n      this.control.untouched = false;\r\n      this.control.touched = true;\r\n    });\r\n  }\r\n}\r\n","import { AjaModel } from \"./aja-model\";\r\nimport { toArray, getCheckboxRadioValue } from \"../utils/util\";\r\nimport {\r\n  radiop,\r\n  selectp,\r\n  textareap,\r\n  inputp,\r\n  checkboxp,\r\n  arrayp\r\n} from \"../utils/p\";\r\nimport { Store } from \"../store\";\r\nimport { SetDataCallBack } from \"../aja\";\r\n\r\nexport class BindingModelBuilder {\r\n  // input / textarea\r\n  input: HTMLInputElement | undefined;\r\n  checkbox: HTMLInputElement | undefined;\r\n  radio: HTMLInputElement | undefined;\r\n  select: HTMLSelectElement | undefined;\r\n\r\n  get options(): HTMLOptionElement[] {\r\n    if (!this.select) return [];\r\n    return toArray(this.select.options);\r\n  }\r\n\r\n  get selectValues(): string[] {\r\n    return this.options.filter(op => op.selected).map(op => op.value);\r\n  }\r\n\r\n  constructor(public node: HTMLElement, public modelAttr: Attr) {\r\n    this._setup();\r\n  }\r\n  private _setup() {\r\n    if (inputp(this.node) || textareap(this.node)) {\r\n      if (checkboxp(this.node as HTMLInputElement)) {\r\n        this.checkbox = this.node as HTMLInputElement;\r\n      } else if (radiop(this.node as HTMLInputElement)) {\r\n        this.radio = this.node as HTMLInputElement;\r\n      } else {\r\n        this.input = this.node as HTMLInputElement;\r\n      }\r\n    } else if (selectp(this.node)) {\r\n      this.select = this.node as HTMLSelectElement;\r\n    }\r\n    this.node.classList.add(\r\n      AjaModel.classes.untouched,\r\n      AjaModel.classes.pristine,\r\n      AjaModel.classes.valid\r\n    );\r\n\r\n    // 控件被访问了\r\n    // 所有绑定的model的元素，都会添加这个服务\r\n    this.node.addEventListener(\"blur\", () => {\r\n      this.touched();\r\n    });\r\n    this.node.removeAttribute(this.modelAttr.name);\r\n  }\r\n\r\n  checkboxSetup(states: any[], isArray: boolean) {\r\n    if (this.checkbox) {\r\n      if (isArray) {\r\n        const data = states[0];\r\n        let ivalue = getCheckboxRadioValue(this.checkbox);\r\n        const checkde = data.some((d: any) => d === ivalue);\r\n        this.checkbox.checked = checkde;\r\n      } else {\r\n        this.checkbox.checked = !!states[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  checkboxChangeListener(\r\n    isArray: boolean,\r\n    data: any,\r\n    setData: SetDataCallBack\r\n  ) {\r\n    if (this.checkbox) {\r\n      this.checkbox.addEventListener(\"change\", () => {\r\n        if (!this.checkbox) return;\r\n        if (isArray) {\r\n          let ivalue = getCheckboxRadioValue(this.checkbox);\r\n          if (this.checkbox.checked) data.push(ivalue);\r\n          else data.remove((d: any) => d === ivalue);\r\n        } else {\r\n          setData(this.checkbox.checked);\r\n        }\r\n        this.dirty();\r\n      });\r\n    }\r\n  }\r\n\r\n  radioSetup(states: any[]) {\r\n    if (this.radio) {\r\n      this.radio.checked = states[0] === this.radio.value;\r\n    }\r\n  }\r\n\r\n  radioChangeListener(setData: SetDataCallBack) {\r\n    if (this.radio) {\r\n      this.radio.addEventListener(\"change\", () => {\r\n        if (!this.radio) return;\r\n        let newData = getCheckboxRadioValue(this.radio);\r\n        this.radio.checked = true;\r\n        this.dirty();\r\n        setData(newData);\r\n      });\r\n    }\r\n  }\r\n\r\n  inputSetup(states: any[]) {\r\n    if (this.input) {\r\n      this.input.value = states[0];\r\n    }\r\n  }\r\n  inputChangeListener(setData: SetDataCallBack) {\r\n    if (this.input) {\r\n      // 值发生变化了\r\n      this.input.addEventListener(\"input\", () => {\r\n        this.dirty();\r\n        setData(this.input?.value);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectSetup(states: any[]) {\r\n    if (this.select) {\r\n      const data = states[0];\r\n      const selectOptions = toArray(this.select.options);\r\n      // 多选参数必须为 array\r\n      if (this.select.multiple && arrayp(data)) {\r\n        let notFind = true;\r\n        this.select.selectedIndex = -1;\r\n        this.options.forEach(option => {\r\n          if (data.some((d: any) => d === option.value)) {\r\n            notFind = false;\r\n            option.selected = true;\r\n          }\r\n        });\r\n        if (notFind) this.select.selectedIndex = -1;\r\n      } else {\r\n        // 没找到默认-1\r\n        const index = selectOptions.findIndex(op => op.value === data);\r\n        this.select.selectedIndex = index;\r\n      }\r\n    }\r\n  }\r\n\r\n  selectChangeListener(setData: SetDataCallBack) {\r\n    if (this.select) {\r\n      this.select.addEventListener(\"change\", () => {\r\n        if (this.select?.multiple) {\r\n          setData(Store.list(this.selectValues));\r\n        } else {\r\n          setData(this.select?.value);\r\n        }\r\n        this.dirty();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * * 控件的值有效时\r\n   */\r\n  valid() {\r\n    this.node.classList.replace(\r\n      AjaModel.classes.invalid,\r\n      AjaModel.classes.valid\r\n    );\r\n  }\r\n  /**\r\n   * * 控件的值无效时\r\n   */\r\n  invalid() {\r\n    this.node.classList.replace(\r\n      AjaModel.classes.valid,\r\n      AjaModel.classes.invalid\r\n    );\r\n  }\r\n\r\n  /**\r\n   * * 控件的值发生变化\r\n   */\r\n  dirty() {\r\n    this.node.classList.replace(\r\n      AjaModel.classes.pristine,\r\n      AjaModel.classes.dirty\r\n    );\r\n  }\r\n\r\n  /**\r\n   * * 控件被访问\r\n   */\r\n  touched() {\r\n    this.node.classList.replace(\r\n      AjaModel.classes.untouched,\r\n      AjaModel.classes.touched\r\n    );\r\n  }\r\n}\r\n","import {\r\n  createRoot,\r\n  createObject,\r\n  emptyString,\r\n  parseTemplateEventArgs,\r\n  ourEval,\r\n  hasModelAttr,\r\n  parsePipe\r\n} from \"./utils/util\";\r\nimport { Store, State, Actions, Computeds, reaction, autorun } from \"./store\";\r\nimport {\r\n  attrStartExp,\r\n  attrEndExp,\r\n  eventStartExp,\r\n  eventEndExp,\r\n  tempvarExp\r\n} from \"./utils/exp\";\r\nimport { BindingIfBuilder } from \"./classes/binding-if-builder\";\r\nimport { BindingForBuilder } from \"./classes/binding-for-builder\";\r\nimport { BindingTextBuilder } from \"./classes/binding-text-builder\";\r\nimport { AjaModel } from \"./classes/aja-model\";\r\nimport {\r\n  eventp,\r\n  tempvarp,\r\n  objectp,\r\n  boolStringp,\r\n  arrayp,\r\n  attrp,\r\n  elementNodep,\r\n  textNodep,\r\n  inputp,\r\n  textareap,\r\n  checkboxp,\r\n  radiop,\r\n  selectp\r\n} from \"./utils/p\";\r\nimport { BindingModelBuilder } from \"./classes/binding-model-builder\";\r\nimport { Pipes, pipes, usePipes } from \"./pipes/pipes\";\r\n\r\nexport interface GetDataCallBack {\r\n  (key: string): any;\r\n}\r\nexport interface SetDataCallBack {\r\n  (newData: any): void;\r\n}\r\n\r\nexport interface Options {\r\n  state?: State;\r\n  actions?: Actions;\r\n  computeds?: Computeds;\r\n  instructionPrefix?: string;\r\n  templateEvent?: string;\r\n  modeldirective?: string;\r\n  initState?: Function;\r\n  pipes?: Pipes;\r\n}\r\n\r\nconst l = console.log;\r\n\r\nclass Aja {\r\n  /**\r\n   * * 模板变量保存的DOM\r\n   */\r\n  private _templateVariables: {\r\n    [key: string]: ChildNode | Element | HTMLElement | AjaModel;\r\n  } = {};\r\n\r\n  /**\r\n   * *  指令前缀\r\n   * [:for] [:if]\r\n   */\r\n  private _instructionPrefix: string = \":\";\r\n\r\n  /**\r\n   * <button (click)=\"setName($event)\">click me</button>\r\n   */\r\n  private _templateEvent: string = \"$event\";\r\n\r\n  /**\r\n   * * 双向绑定指令\r\n   */\r\n  private _modeldirective: string = \"[(model)]\";\r\n\r\n  /**\r\n   * * :if\r\n   */\r\n  private get _ifInstruction(): string {\r\n    return this._instructionPrefix + \"if\";\r\n  }\r\n  /**\r\n   * * :for\r\n   */\r\n  private get _forInstruction(): string {\r\n    return this._instructionPrefix + \"for\";\r\n  }\r\n\r\n  $store!: State;\r\n\r\n  get $actions() {\r\n    return this.$store.$actions;\r\n  }\r\n\r\n  constructor(view: string | HTMLElement, options: Options) {\r\n    const root = createRoot(view);\r\n    if (root === null) return;\r\n    if (options.instructionPrefix)\r\n      this._instructionPrefix = options.instructionPrefix.toLowerCase();\r\n    if (options.templateEvent) this._templateEvent = options.templateEvent;\r\n    if (options.modeldirective)\r\n      this._modeldirective = options.modeldirective.toLowerCase();\r\n    if (options.pipes) Object.assign(pipes, options.pipes);\r\n    this._proxyState(options);\r\n    if (options.initState) options.initState.call(this.$store);\r\n    this._define(root, this.$store);\r\n  }\r\n\r\n  /**\r\n   * 扫描绑定\r\n   * @param root\r\n   */\r\n  private _define(root: HTMLElement, state: State): void {\r\n    let depath = true;\r\n\r\n    // 没有attrs就不解析了\r\n    if (root.attributes && root.attributes.length) {\r\n      // 优先解析if -> for -> 其它属性\r\n      depath = this._parseBindIf(root, state);\r\n      if (depath) depath = this._parseBindFor(root, state);\r\n      if (depath) {\r\n        const attrs: Attr[] = Array.from(root.attributes);\r\n        this._parseBindAttrs(root, attrs, state);\r\n      }\r\n    }\r\n\r\n    const children = Array.from(root.childNodes);\r\n    if (depath && children.length) {\r\n      this._bindingChildrenAttrs(children, state);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * * 解析指定HTMLElement的属性\r\n   * @param node\r\n   * @param state\r\n   */\r\n  private _parseBindAttrs(node: HTMLElement, attrs: Attr[], state: State) {\r\n    for (const attr of attrs) {\r\n      const { name, value } = attr;\r\n      // #input #username\r\n      if (tempvarp(name)) {\r\n        this._tempvarBindHandle(node, attr);\r\n        continue;\r\n      }\r\n\r\n      // [title]='xxx'\r\n      if (attrp(name)) {\r\n        this._attrBindHandle(node, attr, state);\r\n        continue;\r\n      }\r\n\r\n      // (click)=\"echo('hello',$event)\"\r\n      if (eventp(name)) {\r\n        this._eventBindHandle(node, attr, state);\r\n        continue;\r\n      }\r\n    }\r\n\r\n    // 其它属性解析完，在解析双向绑定\r\n    const modelAttr = hasModelAttr(node, this._modeldirective);\r\n    if (modelAttr) {\r\n      const model = new BindingModelBuilder(node, modelAttr);\r\n      const { value } = modelAttr;\r\n      if (inputp(node) || textareap(node)) {\r\n        if (model.checkbox && checkboxp(model.checkbox)) {\r\n          const data = this._getData(value, state);\r\n          // 这个时候的data如果是array, 就对value进行处理\r\n          // 不然就当作bool值处理\r\n          const isArrayData = arrayp(data);\r\n          reaction(\r\n            () => [this._getData(value, state)],\r\n            states => {\r\n              model.checkboxSetup(states, isArrayData);\r\n            }\r\n          );\r\n          model.checkboxChangeListener(isArrayData, data, newValue => {\r\n            this._setDate(value, newValue, state);\r\n          });\r\n        } else if (model.radio && radiop(model.radio)) {\r\n          // 单选按钮\r\n          reaction(\r\n            () => [this._getData(value, state)],\r\n            states => {\r\n              model.radioSetup(states);\r\n            }\r\n          );\r\n          model.radioChangeListener(newValue => {\r\n            this._setDate(value, newValue, state);\r\n          });\r\n        } else {\r\n          // 其它\r\n          reaction(\r\n            () => [this._getData(value, state)],\r\n            states => {\r\n              model.inputSetup(states);\r\n            }\r\n          );\r\n          model.inputChangeListener(newValue => {\r\n            this._setDate(value, newValue, state);\r\n          });\r\n        }\r\n      } else if (selectp(node)) {\r\n        setTimeout(() => {\r\n          reaction(\r\n            () => [this._getData(value, state)],\r\n            states => {\r\n              model.selectSetup(states);\r\n            }\r\n          );\r\n        });\r\n        model.selectChangeListener(newValue => {\r\n          this._setDate(value, newValue, state);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private _proxyState(options: Options): void {\r\n    const state = createObject<State>(options.state);\r\n    const computeds = createObject<Computeds>(options.computeds);\r\n    const actions = createObject<Actions>(options.actions);\r\n\r\n    this.$store = new Store({ state, computeds, actions });\r\n  }\r\n\r\n  /**\r\n   * * 1. 优先寻找模板变量\r\n   * * 2. 在传入的state中寻找\r\n   * * 3. 在this.$store中找\r\n   * * 'name' 'object.name'\r\n   * ? 优先找模板变量的数据，再找state\r\n   * ? 虽然返回的是any， 但是这个函数不会返回 undefined\r\n   * @param key\r\n   * @param state\r\n   */\r\n  private _getData(key: string, state: State): any {\r\n    if (typeof key !== \"string\") return null;\r\n    // 抽掉所有空格，再把管道排除\r\n    const [bindKey, pipeList] = parsePipe(key);\r\n    // 在解析绑定的变量\r\n    const bindKeys = bindKey.split(\".\");\r\n    let _result: any;\r\n    const firstKey = bindKeys[0];\r\n\r\n    // 模板变量\r\n    if (firstKey.toLowerCase() in this._templateVariables) {\r\n      // 绑定的模板变量，全是小写\r\n      const lowerKeys = bindKeys.map(k => k.toLowerCase());\r\n      for (const k of lowerKeys) {\r\n        _result = _result ? _result[k] : this._templateVariables[k];\r\n      }\r\n    }\r\n\r\n    // state\r\n    if (_result === undefined) {\r\n      if (firstKey in state) {\r\n        for (const k of bindKeys) {\r\n          _result = _result ? _result[k] : state[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    // this.$store\r\n    if (_result === undefined && state !== this.$store) {\r\n      if (firstKey in this.$store) {\r\n        for (const k of bindKeys) {\r\n          _result = _result ? _result[k] : this.$store[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_result === undefined) {\r\n      // 没救了， eval随便解析返回个值吧!\r\n      _result = this._parseJsString(bindKey, state);\r\n    }\r\n\r\n    return _result;\r\n  }\r\n\r\n  /**\r\n   * 设置新数据，现在暂时在双向绑定的时候使用新数据, 数据来源于state\r\n   * @param key\r\n   * @param newValue\r\n   * @param state\r\n   */\r\n  private _setDate(key: string, newValue: any, state: State) {\r\n    if (typeof key !== \"string\") return null;\r\n    const keys = key.split(\".\");\r\n    const keysSize = keys.length;\r\n    if (!keysSize) return;\r\n    const firstKey = keys[0];\r\n    let _result: any;\r\n    if (keysSize === 1 && firstKey in state) {\r\n      state[firstKey] = newValue;\r\n      return;\r\n    }\r\n    for (let index = 0; index < keysSize - 1; index++) {\r\n      const k = keys[index];\r\n      _result = _result ? _result[k] : state[k];\r\n    }\r\n\r\n    if (_result) {\r\n      const lastKey = keys[keysSize - 1];\r\n      _result[lastKey] = newValue;\r\n      return;\r\n    }\r\n    this._parseJsString(key, state, true, newValue);\r\n  }\r\n\r\n  /**\r\n   * 解析一些奇怪的插值表达式\r\n   * {{ el['age'] }}\r\n   * :for=\"(i, el) in arr\" (click)=\"foo( 'xxx-' + el.name  )\"\r\n   * @param key\r\n   * @param state\r\n   * @param setState\r\n   */\r\n  private _parseJsString(\r\n    key: string,\r\n    state: State,\r\n    setState: boolean = false,\r\n    newValue: any = \"\"\r\n  ) {\r\n    try {\r\n      return ourEval(`return ${key}`);\r\n    } catch (er) {\r\n      // 利用错误来抓取变量\r\n      const msg: string = er.message;\r\n      if (msg.includes(\"is not defined\")) {\r\n        const match = msg.match(/(.*) is not defined/);\r\n        if (!match) return emptyString;\r\n        const varName = match[1];\r\n        const context = this._getData(varName, state);\r\n        if (setState) {\r\n          const funBody =\r\n            key.replace(new RegExp(`\\\\b${varName}`, \"g\"), \"this\") +\r\n            `='${newValue}'`;\r\n          ourEval.call(context, `${funBody}`);\r\n        } else {\r\n          const funBody = key.replace(new RegExp(`\\\\b${varName}`, \"g\"), \"this\");\r\n          let _result = ourEval.call(context, `return ${funBody}`);\r\n          if (_result === undefined) _result = emptyString;\r\n          return _result;\r\n        }\r\n      } else {\r\n        console.error(er);\r\n        throw er;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ['obj.age', 12, false, '\"   \"', alert('xxx')] -> [22, 12, false, \"   \", eval(<other>)]\r\n   * @param args\r\n   * @param e\r\n   * @param state\r\n   * @param isModel 是否为展开的双向绑定事件  [(model)]=\"name\" (modelChange)=\"nameChange($event)\"\r\n   */\r\n  private _parseArgsToArguments(\r\n    args: string[],\r\n    e: Event,\r\n    state: State,\r\n    isModel = false\r\n  ) {\r\n    return args.map(arg => {\r\n      if (!arg) return arg;\r\n      let el = arg.trim();\r\n      if (el === this._templateEvent) {\r\n        let _result;\r\n        if (isModel) {\r\n          if (e.target) {\r\n            _result = (e.target as HTMLInputElement).value;\r\n          }\r\n        } else {\r\n          _result = e;\r\n        }\r\n        return _result;\r\n      }\r\n      return this._getData(el, state);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 解析一个节点上是否绑定了:if指令, 并更具指令的值来解析节点\r\n   * @param node\r\n   * @param attrs\r\n   */\r\n  private _parseBindIf(node: HTMLElement, state: State): boolean {\r\n    let show = true;\r\n    const bifb = new BindingIfBuilder(node, this._ifInstruction);\r\n    if (bifb.hasIfAttr) {\r\n      const value = bifb.value as string;\r\n      if (boolStringp(value)) {\r\n        show = value === \"true\";\r\n        bifb.checked(show);\r\n      } else {\r\n        reaction(\r\n          () => [this._getData(value, state)],\r\n          states => {\r\n            show = states[0];\r\n            const pipeList = parsePipe(value)[1];\r\n            show = usePipes(show, pipeList, key => this._getData(key, state));\r\n            bifb.checked(show);\r\n          }\r\n        );\r\n      }\r\n    }\r\n    return show;\r\n  }\r\n\r\n  /**\r\n   * 解析节点上绑定的for指令\r\n   * 如果节点绑定了for指令，这个节点将不会继续被解析\r\n   * @param node\r\n   * @param state\r\n   */\r\n  private _parseBindFor(node: HTMLElement, state: State): boolean {\r\n    const forBuilder = new BindingForBuilder(node, this._forInstruction);\r\n    if (forBuilder.hasForAttr) {\r\n      // 创建注释节点\r\n      if (forBuilder.isNumberData) {\r\n        let _data = +(forBuilder.bindData as string);\r\n\r\n        _data = usePipes(_data, forBuilder.pipes, key =>\r\n          this._getData(key, state)\r\n        );\r\n\r\n        for (let v = 0; v < _data; v++) {\r\n          const forState = forBuilder.createForContextState(v);\r\n          const item = forBuilder.createItem();\r\n          this._define(item as HTMLElement, forState);\r\n        }\r\n        forBuilder.draw(_data);\r\n      } else {\r\n        const _that = this;\r\n        reaction(\r\n          () => [this._getData(forBuilder.bindData as string, state)],\r\n          states => {\r\n            let _data = states[0];\r\n            _data = usePipes(_data, forBuilder.pipes, key =>\r\n              this._getData(key, state)\r\n            );\r\n            forBuilder.clear();\r\n            let keys;\r\n            if (arrayp(_data)) keys = Object.keys(_data);\r\n            else keys = _data;\r\n            for (const k in keys) {\r\n              const forState = forBuilder.createForContextState(\r\n                k,\r\n                _data[k],\r\n                false\r\n              );\r\n              const item = forBuilder.createItem();\r\n              _that._define(item as HTMLElement, forState);\r\n            }\r\n            forBuilder.draw(_data);\r\n          }\r\n        );\r\n      }\r\n    }\r\n    return !forBuilder.hasForAttr;\r\n  }\r\n\r\n  /**\r\n   * 处理 [title]='xxx' 解析\r\n   * @param node\r\n   * @param param1\r\n   */\r\n  private _attrBindHandle(\r\n    node: HTMLElement,\r\n    { name, value }: Attr,\r\n    state: State\r\n  ): void {\r\n    let [attrName, attrChild] = name\r\n      .replace(attrStartExp, emptyString)\r\n      .replace(attrEndExp, emptyString)\r\n      .split(\".\");\r\n    reaction(\r\n      () => [this._getData(value, state)],\r\n      states => {\r\n        const data = states[0];\r\n        if (attrName === \"style\") {\r\n          if (attrChild && attrChild in node.style) {\r\n            (node.style as { [k: string]: any })[attrChild] = data;\r\n          } else {\r\n            const styles: CSSStyleDeclaration = data;\r\n            for (const key in styles) {\r\n              if (\r\n                Object.getOwnPropertyDescriptor(node.style, key) &&\r\n                styles[key]\r\n              ) {\r\n                reaction(\r\n                  () => [styles[key]],\r\n                  states => {\r\n                    node.style[key] = states[0];\r\n                  }\r\n                );\r\n              }\r\n            }\r\n          }\r\n        } else if (attrName === \"class\") {\r\n          let _value = data;\r\n          if (_value === null) _value = emptyString;\r\n          if (!attrChild) {\r\n            if (objectp(_value)) {\r\n              for (const klass in _value) {\r\n                reaction(\r\n                  () => [_value[klass]],\r\n                  states => {\r\n                    if (states[0]) {\r\n                      node.classList.add(klass);\r\n                    } else {\r\n                      node.classList.remove(klass);\r\n                    }\r\n                  }\r\n                );\r\n              }\r\n            } else {\r\n              node.setAttribute(attrName, _value);\r\n            }\r\n          } else {\r\n            if (_value) {\r\n              node.classList.add(attrChild);\r\n            }\r\n          }\r\n        } else if (attrName === \"innerhtml\") {\r\n          node.innerHTML = data;\r\n        } else {\r\n          let _value = data;\r\n          if (_value === null) _value = emptyString;\r\n          if (_value) {\r\n            node.setAttribute(attrName, _value);\r\n          } else {\r\n            if (node.hasAttribute(attrName)) node.removeAttribute(attrName);\r\n          }\r\n        }\r\n      }\r\n    );\r\n    node.removeAttribute(name);\r\n  }\r\n\r\n  /**\r\n   * 处理 (click)=\"echo('hello',$event)\" 解析\r\n   * @param htmlElement\r\n   * @param param1\r\n   */\r\n  private _eventBindHandle(\r\n    htmlElement: HTMLElement,\r\n    { name, value }: Attr,\r\n    state: State\r\n  ): void {\r\n    let eventName = name\r\n      .replace(eventStartExp, emptyString)\r\n      .replace(eventEndExp, emptyString);\r\n    // 函数名\r\n    let funcName: string = value;\r\n    // 函数参数\r\n    let args: string[] = [];\r\n    if (value.includes(\"(\")) {\r\n      // 带参数的函数\r\n      const index = value.indexOf(\"(\");\r\n      funcName = value.substr(0, index);\r\n      args = parseTemplateEventArgs(value);\r\n    }\r\n    const modelChangep: boolean = eventName === \"modelchange\";\r\n    if (modelChangep) eventName = \"input\";\r\n    htmlElement.addEventListener(eventName, e => {\r\n      //? 每次点击都需解析参数?\r\n      //! 如果只解析一次，那么模板变量需要提前声明, 并且模板变量不会更新!\r\n      if (this.$actions && funcName in this.$actions) {\r\n        this.$actions[funcName].apply(\r\n          this.$store,\r\n          this._parseArgsToArguments(args, e, state, modelChangep)\r\n        );\r\n      }\r\n    });\r\n    htmlElement.removeAttribute(name);\r\n  }\r\n\r\n  /**\r\n   * * 处理模板变量 #input 解析\r\n   * @param node\r\n   * @param param1\r\n   */\r\n  private _tempvarBindHandle(node: HTMLElement, { name, value }: Attr): void {\r\n    const _key = name.replace(tempvarExp, emptyString);\r\n    if (value === \"ajaModel\") {\r\n      // 表单元素才绑定 ajaModel\r\n      this._templateVariables[_key] = new AjaModel(node as HTMLInputElement);\r\n    } else {\r\n      this._templateVariables[_key] = node;\r\n    }\r\n    node.removeAttribute(name);\r\n  }\r\n\r\n  /**\r\n   * * 克隆DOM节点，默认深度克隆，绑定模板事件\r\n   * @param htmlElement\r\n   * @param forState\r\n   * @param deep\r\n   */\r\n  private _cloneNode(\r\n    htmlElement: HTMLElement,\r\n    forState: Object,\r\n    deep: boolean = true\r\n  ): Node {\r\n    const item = htmlElement.cloneNode(deep);\r\n    const forElementAttrs = Array.from(htmlElement.attributes);\r\n    const eventAttrs = forElementAttrs.filter(e => eventp(e.name));\r\n    if (eventAttrs.length) {\r\n      for (const eventAttr of eventAttrs) {\r\n        this._eventBindHandle(item as HTMLElement, eventAttr, forState);\r\n      }\r\n    }\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * * 递归解析子节点\r\n   * @param childNodes\r\n   * @param state\r\n   */\r\n  private _bindingChildrenAttrs(children: ChildNode[], state: State): any {\r\n    if (!children.length) return;\r\n    let node: ChildNode = children[0];\r\n    if (elementNodep(node)) {\r\n      this._define(node as HTMLElement, state);\r\n    }\r\n    if (textNodep(node)) {\r\n      this._setTextContent(node, state);\r\n    }\r\n    return this._bindingChildrenAttrs(children.slice(1), state);\r\n  }\r\n\r\n  /**\r\n   * * 解析文本节点的插值表达式\r\n   * @param childNode\r\n   * @param state\r\n   */\r\n  private _setTextContent(childNode: ChildNode, state: State): void {\r\n    const textBuilder = new BindingTextBuilder(childNode);\r\n    if (!textBuilder.needParse) return;\r\n    autorun(() => {\r\n      textBuilder.setText(key => this._getData(key, state));\r\n    });\r\n  }\r\n}\r\n\r\nexport default Aja;\r\n"],"names":[],"mappings":"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"}