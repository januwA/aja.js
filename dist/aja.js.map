{"version":3,"file":"aja.js","sources":["../src/utils/util.ts","../src/store.ts","../src/utils/exp.ts","../src/aja.ts"],"sourcesContent":["/**\r\n * [title]=\"title\"\r\n * @param value\r\n */\r\nexport function attrp(value: string) {\r\n  return /^\\[\\w.+\\]$/.test(value);\r\n}\r\n\r\n/**\r\n * (click)=\"hello('hello')\"\r\n */\r\nexport function eventp(value: string) {\r\n  return /^\\(\\w.+\\)$/.test(value);\r\n}\r\n\r\n/**\r\n * #input 模板变量\r\n * @param value\r\n */\r\nexport function tempvarp(value: string) {\r\n  return value.charAt(0) === \"#\";\r\n}\r\n\r\n/**\r\n * * 双向绑定\r\n * @param str\r\n */\r\nexport function modelp(str: string, _modeldirective: string = \"[(model)]\") {\r\n  return str === _modeldirective;\r\n}\r\n\r\nexport function createRoot(view: string | HTMLElement): HTMLElement | null {\r\n  return typeof view === \"string\"\r\n    ? document.querySelector<HTMLElement>(view)\r\n    : view;\r\n}\r\n\r\nexport function createIfCommentData(value: any): string {\r\n  return `{\":if\": \"${!!value}\"}`;\r\n}\r\n\r\nexport function createForCommentData(obj: any): string {\r\n  return `{\":for\": \"${obj}\"}`;\r\n}\r\n\r\nexport function ifp(key: string, ifInstruction: string): boolean {\r\n  return key === ifInstruction;\r\n}\r\n\r\nexport function forp(key: string, forInstruction: string): boolean {\r\n  return key === forInstruction;\r\n}\r\n\r\nexport function createObject<T>(obj?: T): T {\r\n  return obj ? obj : ({} as T);\r\n}\r\n\r\nexport const emptyString: string = \"\";\r\n\r\nexport function isNumber(str: string): boolean {\r\n  if (typeof str === \"number\") return true;\r\n  if (str && !str.trim()) return false;\r\n  return !isNaN(+str);\r\n}\r\n\r\n/**\r\n * 'name'  \"name\"\r\n *\r\n */\r\nexport function isTemplateString(str: string): boolean {\r\n  return /^['\"`]/.test(str.trim());\r\n}\r\n\r\n/**\r\n * '       '\r\n * @param str\r\n */\r\nexport function isTemplateEmptyString(str: string): boolean {\r\n  return !str.trim();\r\n}\r\n\r\n/**\r\n * setAge( obj.age   , '        ') -> [\"obj.age   \", \" '        '\"]\r\n * @param str\r\n */\r\nexport function parseTemplateEventArgs(str: string) {\r\n  let index = str.indexOf(\"(\");\r\n  return str\r\n    .substr(index, str.length - 2)\r\n    .replace(/(^\\(*)|(\\)$)/g, emptyString)\r\n    .trim()\r\n    .split(\",\");\r\n}\r\n\r\n/**\r\n * 'false' || 'true'\r\n * @param str\r\n */\r\nexport function isBoolString(str: string): boolean {\r\n  return str === \"true\" || str === \"false\";\r\n}\r\n\r\n/**\r\n * * 避免使用全局的eval\r\n * @param this\r\n * @param bodyString\r\n */\r\nexport function ourEval(this: any, bodyString: string): any {\r\n  const f = new Function(bodyString);\r\n  try {\r\n    return f.apply(this, arguments);\r\n  } catch (er) {\r\n    throw er;\r\n  }\r\n}\r\n\r\n/**\r\n * Object.prototype.toString.call({}) -> \"[object Object]\"\r\n * @param data\r\n */\r\nexport function dataTag(data: any): string {\r\n  return Object.prototype.toString.call(data);\r\n}\r\n\r\nexport function objectp(data: any) {\r\n  return Object.prototype.toString.call(data) === \"[object Object]\";\r\n}\r\n\r\nexport function arrayp(data: any) {\r\n  return Object.prototype.toString.call(data) === \"[object Array]\";\r\n}\r\n\r\nexport function nullp(data: any) {\r\n  return Object.prototype.toString.call(data) === \"[object Null]\";\r\n}\r\n\r\n/**\r\n * 把字符串安全格式化 为正则表达式源码\r\n * {{ arr[0] }} -> \\{\\{ arr\\[0\\] \\}\\}\r\n * @param str\r\n */\r\nexport function escapeRegExp(str: string) {\r\n  return str.replace(/([-.*+?^${}()|[\\]\\/\\\\])/g, \"\\\\$1\");\r\n}\r\n\r\nexport function escapeHTML(str: string) {\r\n  return str\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\\s/g, \"&nbsp;\");\r\n}\r\n\r\nexport function elementNodep(node: ChildNode | HTMLElement): boolean {\r\n  return (\r\n    node.nodeType === Node.ELEMENT_NODE ||\r\n    node.nodeType === Node.DOCUMENT_FRAGMENT_NODE\r\n  );\r\n}\r\n\r\nexport function textNodep(node: ChildNode | HTMLElement): boolean {\r\n  return node.nodeType === Node.TEXT_NODE;\r\n}\r\n\r\n/**\r\n * * 将['on']转为[null]\r\n * @param checkbox\r\n */\r\nexport function getCheckBoxValue(checkbox: HTMLInputElement): string | null {\r\n  let value: string | null = checkbox.value;\r\n  if (value === \"on\") value = null;\r\n  return value;\r\n}\r\n","import { objectp, arrayp, dataTag } from \"./utils/util\";\r\n\r\nconst l = console.log;\r\n\r\n/**\r\n * state 对象\r\n */\r\nexport interface State {\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * 事件函数\r\n */\r\nexport interface Actions {\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * 计算函数\r\n */\r\nexport interface Computeds {\r\n  [key: string]: Function;\r\n}\r\n\r\nexport interface StoreOptions {\r\n  state: State;\r\n  actions?: Actions;\r\n  computeds?: Computeds;\r\n  context?: any;\r\n}\r\n\r\n/**\r\n * * 任意一个属性的变化，都会触发所有的监听事件\r\n */\r\nconst autorunListeners: Function[] = [];\r\n\r\nfunction updateAll() {\r\n  for (const f of autorunListeners) {\r\n    f();\r\n  }\r\n}\r\n\r\nexport const autorun = (f: Function) => {\r\n  f();\r\n  autorunListeners.push(f);\r\n};\r\n\r\nexport class Store {\r\n  public $actions!: Actions;\r\n\r\n  /**\r\n   *\r\n   * @param state 需要代理的数据\r\n   */\r\n  constructor({ state, computeds, actions }: StoreOptions) {\r\n    Store.proxyObject(state, this);\r\n\r\n    if (computeds) {\r\n      for (const k in computeds) {\r\n        Object.defineProperty(this, k, {\r\n          get() {\r\n            return computeds[k].call(this);\r\n          },\r\n          enumerable: true\r\n        });\r\n      }\r\n    }\r\n\r\n    // 只把actions绑定在store上\r\n    if (actions) {\r\n      this.$actions = actions;\r\n      // 在actions中调用this.m()\r\n      Object.assign(this, actions);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * * 代理每个属性的 get， set\r\n   */\r\n  static proxyObject(object: State, context: any): any {\r\n    for (const k in object) {\r\n      let v = object[k];\r\n\r\n      if (arrayp(v)) {\r\n        v = Store.proxyArray(v);\r\n      }\r\n\r\n      if (objectp(v)) {\r\n        v = Store.proxyObject(v, {});\r\n      }\r\n\r\n      object[k] = v;\r\n\r\n      Object.defineProperty(context, k, {\r\n        get() {\r\n          const _r = object[k];\r\n          return _r;\r\n        },\r\n        set(newValue) {\r\n          object[k] = newValue;\r\n          updateAll();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n      });\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  /**\r\n   * * 拦截数组的非幕等方, 并循环代理每个元素\r\n   * @param array\r\n   */\r\n  static proxyArray(array: any[]): any[] {\r\n    var aryMethods = [\r\n      \"push\",\r\n      \"pop\",\r\n      \"shift\",\r\n      \"unshift\",\r\n      \"splice\",\r\n      \"sort\",\r\n      \"reverse\"\r\n    ];\r\n    var arrayAugmentations = Object.create(Array.prototype);\r\n\r\n    aryMethods.forEach(method => {\r\n      let original = (Array.prototype as { [k: string]: any })[method];\r\n      arrayAugmentations[method] = function(...args: any[]) {\r\n        // 将传递进来的值，重新代理\r\n        const _applyArgs = Store.proxyArray(args);\r\n\r\n        // 调用原始方法\r\n        const r = original.apply(this, _applyArgs);\r\n\r\n        // 跟新\r\n        updateAll();\r\n        return r;\r\n      };\r\n    });\r\n\r\n    // 遍历代理数组每项的值\r\n    array = (array as any[]).map(el => {\r\n      if (objectp(el)) {\r\n        return Store.proxyObject(el, {});\r\n      }\r\n      if (arrayp(el)) {\r\n        return Store.proxyArray(el);\r\n      }\r\n      return el;\r\n    });\r\n\r\n    Object.setPrototypeOf(array, arrayAugmentations);\r\n    return array;\r\n  }\r\n}\r\n","//* 匹配 {{ name }} {{ obj.age }}\r\n// export const interpolationExpressionExp = /{{([\\w\\s\\.][\\s\\w\\.]+)}}/g;\r\nexport const interpolationExpressionExp = /{{(.*?)}}/g;\r\n\r\n\r\n//* 匹配空格\r\nexport const spaceExp = /\\s/g;\r\n\r\n//* !!hide\r\nexport const firstWithExclamationMarkExp = /^!*/;\r\n\r\nexport const attrStartExp = /^\\[/;\r\nexport const attrEndExp = /\\]$/;\r\n\r\nexport const eventStartExp = /^\\(/;\r\nexport const eventEndExp = /\\)$/;\r\n\r\nexport const tempvarExp = /^#/;\r\n\r\nexport const firstAllValue = /^./;\r\nexport const endAllValue = /.$/;\r\n","import {\r\n  attrp,\r\n  eventp,\r\n  tempvarp,\r\n  createRoot,\r\n  createIfCommentData,\r\n  createObject,\r\n  emptyString,\r\n  isNumber,\r\n  parseTemplateEventArgs,\r\n  isBoolString,\r\n  ifp,\r\n  createForCommentData,\r\n  ourEval,\r\n  modelp,\r\n  elementNodep,\r\n  textNodep,\r\n  arrayp,\r\n  getCheckBoxValue\r\n} from \"./utils/util\";\r\nimport { Store, autorun, State, Actions, Computeds } from \"./store\";\r\nimport {\r\n  interpolationExpressionExp,\r\n  spaceExp,\r\n  attrStartExp,\r\n  attrEndExp,\r\n  eventStartExp,\r\n  eventEndExp,\r\n  tempvarExp\r\n} from \"./utils/exp\";\r\n\r\nexport interface Options {\r\n  state?: State;\r\n  actions?: Actions;\r\n  computeds?: Computeds;\r\n  instructionPrefix?: string;\r\n  templateEvent?: string;\r\n  modeldirective?: string;\r\n}\r\n\r\nconst l = console.log;\r\n\r\nclass Aja {\r\n  /**\r\n   * * 模板变量保存的DOM\r\n   */\r\n  private _templateVariables: {\r\n    [key: string]: ChildNode | Element | HTMLElement;\r\n  } = {};\r\n\r\n  /**\r\n   * *  指令前缀\r\n   * [:for] [:if]\r\n   */\r\n  private _instructionPrefix: string = \":\";\r\n\r\n  /**\r\n   * <button (click)=\"setName($event)\">click me</button>\r\n   */\r\n  private _templateEvent: string = \"$event\";\r\n\r\n  /**\r\n   * * 双向绑定指令\r\n   */\r\n  private _modeldirective: string = \"[(model)]\";\r\n\r\n  /**\r\n   * * :if\r\n   */\r\n  private get _ifInstruction(): string {\r\n    return this._instructionPrefix + \"if\";\r\n  }\r\n  /**\r\n   * * :for\r\n   */\r\n  private get _forInstruction(): string {\r\n    return this._instructionPrefix + \"for\";\r\n  }\r\n\r\n  $store!: State;\r\n\r\n  get $actions() {\r\n    return this.$store.$actions;\r\n  }\r\n\r\n  constructor(view: string | HTMLElement, options: Options) {\r\n    const root = createRoot(view);\r\n    if (root === null) return;\r\n    if (options.instructionPrefix)\r\n      this._instructionPrefix = options.instructionPrefix;\r\n    if (options.templateEvent) this._templateEvent = options.templateEvent;\r\n    if (options.modeldirective) this._modeldirective = options.modeldirective;\r\n    this._proxyState(options);\r\n    this._define(root, this.$store);\r\n  }\r\n\r\n  /**\r\n   * 扫描绑定\r\n   * @param root\r\n   */\r\n  private _define(root: HTMLElement, state: State): void {\r\n    const depath = this._bindingAttrs(root, state);\r\n    if (depath) this._bindingChildrenAttrs(Array.from(root.childNodes), state);\r\n  }\r\n\r\n  private _proxyState(options: Options): void {\r\n    const state = createObject<State>(options.state);\r\n    const computeds = createObject<Computeds>(options.computeds);\r\n    const actions = createObject<Actions>(options.actions);\r\n\r\n    this.$store = new Store({ state, computeds, actions });\r\n  }\r\n\r\n  /**\r\n   * * 1. 优先寻找模板变量\r\n   * * 2. 在传入的state中寻找\r\n   * * 3. 在this.$store中找\r\n   * * 'name' 'object.name'\r\n   * ? 优先找模板变量的数据，再找state\r\n   * ? 虽然返回的是any， 但是这个函数不会返回 undefined\r\n   * @param key\r\n   * @param state\r\n   */\r\n  private _getData(key: string, state: State): any {\r\n    if (typeof key !== \"string\") return null;\r\n    const keys = key.split(\".\");\r\n    let _result: any;\r\n    const firstKey = keys[0];\r\n    // 模板变量\r\n    //? 如果连第一个key都不存在，那么就别找了，找下去也会找错值\r\n    if (firstKey in this._templateVariables) {\r\n      for (const k of keys) {\r\n        _result = _result ? _result[k] : this._templateVariables[k];\r\n      }\r\n    }\r\n\r\n    // state\r\n    if (_result === undefined) {\r\n      if (firstKey in state) {\r\n        for (const k of keys) {\r\n          _result = _result ? _result[k] : state[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    // this.$store\r\n    if (_result === undefined && state !== this.$store) {\r\n      if (firstKey in this.$store) {\r\n        for (const k of keys) {\r\n          _result = _result ? _result[k] : this.$store[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_result === undefined) {\r\n      // 没救了， eval随便解析返回个值吧!\r\n      _result = this._parseJsString(key, state);\r\n    }\r\n\r\n    return _result;\r\n  }\r\n\r\n  /**\r\n   * 设置新数据，现在暂时在双向绑定的时候使用新数据, 数据来源于state\r\n   * @param key\r\n   * @param newValue\r\n   * @param state\r\n   */\r\n  private _setDate(key: string, newValue: any, state: State) {\r\n    if (typeof key !== \"string\") return null;\r\n    const keys = key.split(\".\");\r\n    const keysSize = keys.length;\r\n    if (!keysSize) return;\r\n    const firstKey = keys[0];\r\n    let _result: any;\r\n    if (keysSize === 1 && firstKey in state) {\r\n      state[firstKey] = newValue;\r\n      return;\r\n    }\r\n    for (let index = 0; index < keysSize - 1; index++) {\r\n      const k = keys[index];\r\n      _result = _result ? _result[k] : state[k];\r\n    }\r\n\r\n    if (_result) {\r\n      const lastKey = keys[keysSize - 1];\r\n      _result[lastKey] = newValue;\r\n      return;\r\n    }\r\n    this._parseJsString(key, state, true, newValue);\r\n  }\r\n\r\n  /**\r\n   * 解析一些奇怪的插值表达式\r\n   * {{ el['age'] }}\r\n   * :for=\"(i, el) in arr\" (click)=\"foo( 'xxx-' + el.name  )\"\r\n   * @param key\r\n   * @param state\r\n   * @param setState\r\n   */\r\n  private _parseJsString(\r\n    key: string,\r\n    state: State,\r\n    setState: boolean = false,\r\n    newValue: any = \"\"\r\n  ) {\r\n    try {\r\n      return ourEval(`return ${key}`);\r\n    } catch (er) {\r\n      // 利用错误来抓取变量\r\n      const msg: string = er.message;\r\n      if (msg.includes(\"is not defined\")) {\r\n        const match = msg.match(/(.*) is not defined/);\r\n        if (!match) return emptyString;\r\n        const varName = match[1];\r\n        const context = this._getData(varName, state);\r\n        if (setState) {\r\n          const funBody =\r\n            key.replace(new RegExp(`\\\\b${varName}`, \"g\"), \"this\") +\r\n            `='${newValue}'`;\r\n          ourEval.call(context, `${funBody}`);\r\n        } else {\r\n          const funBody = key.replace(new RegExp(`\\\\b${varName}`, \"g\"), \"this\");\r\n          let _result = ourEval.call(context, `return ${funBody}`);\r\n          if (_result === undefined) _result = emptyString;\r\n          return _result;\r\n        }\r\n      } else {\r\n        console.error(er);\r\n        throw er;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ['obj.age', 12, false, '\"   \"', alert('xxx')] -> [22, 12, false, \"   \", eval(<other>)]\r\n   * @param args\r\n   * @param e\r\n   * @param state\r\n   */\r\n  private _parseArgsToArguments(args: string[], e: Event, state: State) {\r\n    return args.map(arg => {\r\n      if (!arg) return arg;\r\n      let el = arg.trim();\r\n      if (el === this._templateEvent) return e;\r\n      return this._getData(el, state);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 处理 :if 解析\r\n   * @param htmlElement\r\n   * @param attrs\r\n   */\r\n  private _ifBindHandle(\r\n    htmlElement: HTMLElement,\r\n    attrs: Attr[],\r\n    state: State\r\n  ): boolean {\r\n    let depath = true;\r\n\r\n    // 是否有 :if 指令\r\n    let ifAttr = attrs.find(({ name }) => ifp(name, this._ifInstruction));\r\n    if (ifAttr) {\r\n      // 创建注释节点做标记\r\n      const commentElement = document.createComment(\"\");\r\n\r\n      // 将注释节点插入到节点上面\r\n      htmlElement.before(commentElement);\r\n      autorun(() => {\r\n        let value = ifAttr!.value.trim();\r\n        let show = true;\r\n        if (isBoolString(value)) {\r\n          show = value === \"true\";\r\n        } else {\r\n          show = this._getData(value, state);\r\n        }\r\n        if (show) {\r\n          commentElement.after(htmlElement);\r\n          depath = true;\r\n        } else {\r\n          htmlElement.replaceWith(commentElement);\r\n          depath = false;\r\n        }\r\n        commentElement.data = createIfCommentData(show);\r\n      });\r\n      htmlElement.removeAttribute(this._ifInstruction);\r\n    }\r\n    return depath;\r\n  }\r\n\r\n  private _forBindHandle(\r\n    htmlElement: HTMLElement,\r\n    attrs: Attr[],\r\n    state: State\r\n  ): boolean {\r\n    let depath = true;\r\n    // 是否有 :for 指令\r\n    let forAttr = attrs.find(({ name }) => ifp(name, this._forInstruction));\r\n    if (forAttr) {\r\n      depath = false;\r\n      const { name, value } = forAttr;\r\n      // 解析for指令的值\r\n      let [varb, data] = value.split(/\\bin\\b/).map(s => s.trim());\r\n      if (!varb) return depath;\r\n\r\n      // 创建注释节点\r\n      const commentElement = document.createComment(\"\");\r\n      htmlElement.replaceWith(commentElement);\r\n      htmlElement.removeAttribute(this._forInstruction);\r\n      const fragment = document.createDocumentFragment();\r\n      if (isNumber(data)) {\r\n        const _data = +data;\r\n        for (let _v = 0; _v < _data; _v++) {\r\n          const forState = {};\r\n          Object.defineProperty(forState, varb, {\r\n            get() {\r\n              return _v;\r\n            }\r\n          });\r\n          const item = htmlElement.cloneNode(true);\r\n          fragment.append(item);\r\n          this._define(item as HTMLElement, forState);\r\n        }\r\n        // 创建完添加到节点\r\n        commentElement.after(fragment);\r\n      } else {\r\n        const _varb: string[] = varb\r\n          .trim()\r\n          .replace(eventStartExp, emptyString)\r\n          .replace(eventEndExp, emptyString)\r\n          .split(\",\")\r\n          .map(v => v.trim());\r\n        const _data = this._getData(data, state);\r\n        const _that = this;\r\n\r\n        // 记录for生成的items，下次更新将全部删除\r\n        const forBuffer: Node[] = [];\r\n        // 不要直接 in _data, 原型函数能被枚举\r\n        autorun(() => {\r\n          for (const forItem of forBuffer) {\r\n            (forItem as HTMLElement).remove();\r\n          }\r\n          const _keys = Object.keys(_data);\r\n          for (const _k in _keys) {\r\n            const forState = {};\r\n            Object.defineProperties(forState, {\r\n              [_varb[0]]: {\r\n                get() {\r\n                  return _k;\r\n                }\r\n              },\r\n              [_varb[1]]: {\r\n                get() {\r\n                  return _that._getData(data, state)[_k];\r\n                }\r\n              }\r\n            });\r\n            const item = this._cloneNode(htmlElement, forState);\r\n            fragment.append(item);\r\n            forBuffer.push(item);\r\n            this._define(item as HTMLElement, forState);\r\n          }\r\n          commentElement.after(fragment);\r\n        });\r\n      }\r\n      commentElement.data = createForCommentData(data);\r\n    }\r\n    return depath;\r\n  }\r\n\r\n  /**\r\n   * 处理 [title]='xxx' 解析\r\n   * @param htmlElement\r\n   * @param param1\r\n   */\r\n  private _attrBindHandle(\r\n    htmlElement: HTMLElement,\r\n    { name, value }: Attr,\r\n    state: State\r\n  ): void {\r\n    let attrName = name\r\n      .replace(attrStartExp, emptyString)\r\n      .replace(attrEndExp, emptyString);\r\n    autorun(() => {\r\n      if (attrName === \"style\") {\r\n        const styles: CSSStyleDeclaration = this._getData(value, state);\r\n        for (const key in styles) {\r\n          // 过滤掉无效的style, 和空值\r\n          if (\r\n            Object.getOwnPropertyDescriptor(htmlElement.style, key) &&\r\n            styles[key]\r\n          ) {\r\n            htmlElement.style[key] = styles[key];\r\n          }\r\n        }\r\n      } else if (attrName === \"innerhtml\") {\r\n        htmlElement.innerHTML = this._getData(value, state);\r\n      } else {\r\n        let _value = this._getData(value, state);\r\n        if (_value === null) _value = emptyString;\r\n        htmlElement.setAttribute(attrName, _value);\r\n      }\r\n    });\r\n    htmlElement.removeAttribute(name);\r\n  }\r\n\r\n  /**\r\n   * 处理 (click)=\"echo('hello',$event)\" 解析\r\n   * @param htmlElement\r\n   * @param param1\r\n   */\r\n  private _eventBindHandle(\r\n    htmlElement: HTMLElement,\r\n    { name, value }: Attr,\r\n    state: State\r\n  ): void {\r\n    const eventName = name\r\n      .replace(eventStartExp, emptyString)\r\n      .replace(eventEndExp, emptyString);\r\n    // 函数名\r\n    let funcName: string = value;\r\n    // 函数参数\r\n    let args: string[] = [];\r\n    if (value.includes(\"(\")) {\r\n      // 带参数的函数\r\n      const index = value.indexOf(\"(\");\r\n      funcName = value.substr(0, index);\r\n      args = parseTemplateEventArgs(value);\r\n    }\r\n\r\n    htmlElement.addEventListener(eventName, e => {\r\n      //? 每次点击都需解析参数?\r\n      //! 如果只解析一次，那么模板变量需要提前声明, 并且模板变量不会更新!\r\n      if (this.$actions && funcName in this.$actions) {\r\n        this.$actions[funcName].apply(\r\n          this.$store,\r\n          this._parseArgsToArguments(args, e, state)\r\n        );\r\n      }\r\n    });\r\n    htmlElement.removeAttribute(name);\r\n  }\r\n\r\n  /**\r\n   * * 处理模板变量 #input 解析\r\n   * @param htmlElement\r\n   * @param param1\r\n   */\r\n  private _tempvarBindHandle(htmlElement: HTMLElement, { name }: Attr): void {\r\n    this._templateVariables[\r\n      name.replace(tempvarExp, emptyString)\r\n    ] = htmlElement;\r\n    htmlElement.removeAttribute(name);\r\n  }\r\n\r\n  /**\r\n   * * 克隆DOM节点，默认深度克隆，绑定模板事件\r\n   * @param htmlElement\r\n   * @param forState\r\n   * @param deep\r\n   */\r\n  private _cloneNode(\r\n    htmlElement: HTMLElement,\r\n    forState: Object,\r\n    deep: boolean = true\r\n  ): Node {\r\n    const item = htmlElement.cloneNode(deep);\r\n    const forElementAttrs = Array.from(htmlElement.attributes);\r\n    const eventAttrs = forElementAttrs.filter(e => eventp(e.name));\r\n    if (eventAttrs.length) {\r\n      for (const eventAttr of eventAttrs) {\r\n        this._eventBindHandle(item as HTMLElement, eventAttr, forState);\r\n      }\r\n    }\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * * 解析指定HTMLElement的属性\r\n   * @param htmlElement\r\n   * @param state\r\n   */\r\n  private _bindingAttrs(htmlElement: HTMLElement, state: State): boolean {\r\n    let depath = true;\r\n\r\n    const attrs: Attr[] = Array.from(htmlElement.attributes);\r\n    if (!attrs.length) return depath;\r\n\r\n    // :if\r\n    depath = this._ifBindHandle(htmlElement, attrs, state);\r\n\r\n    // :for\r\n    depath = this._forBindHandle(htmlElement, attrs, state);\r\n    if (!depath) return depath;\r\n    // 遍历节点属性\r\n    for (const attr of attrs) {\r\n      const { name, value } = attr;\r\n      // #input #username\r\n      if (tempvarp(name)) {\r\n        this._tempvarBindHandle(htmlElement, attr);\r\n        continue;\r\n      }\r\n\r\n      // [title]='xxx'\r\n      if (attrp(name)) {\r\n        this._attrBindHandle(htmlElement, attr, state);\r\n        continue;\r\n      }\r\n\r\n      // (click)=\"echo('hello',$event)\"\r\n      if (eventp(name)) {\r\n        this._eventBindHandle(htmlElement, attr, state);\r\n        continue;\r\n      }\r\n\r\n      // [(model)]=\"username\"\r\n      if (modelp(name, this._modeldirective)) {\r\n        const nodeName: string = htmlElement.nodeName;\r\n        if (nodeName === \"INPUT\" || nodeName === \"TEXTAREA\") {\r\n          const inputElement = htmlElement as HTMLInputElement;\r\n          // l(inputElement.type);\r\n          if (inputElement.type === \"checkbox\") {\r\n            const data = this._getData(value, state);\r\n            // 这个时候的data如果是array, 就对value进行处理\r\n            // 不然就当作bool值处理\r\n            if (!arrayp(data)) {\r\n              autorun(() => {\r\n                const data = this._getData(value, state);\r\n                inputElement.checked = !!data;\r\n              });\r\n              inputElement.addEventListener(\"change\", () => {\r\n                this._setDate(value, inputElement.checked, state);\r\n              });\r\n            } else {\r\n              autorun(() => {\r\n                const data = this._getData(value, state);\r\n                let ivalue: string | null = getCheckBoxValue(inputElement);\r\n                inputElement.checked = data.some((d: any) => d === ivalue);\r\n              });\r\n              inputElement.addEventListener(\"change\", () => {\r\n                const data = this._getData(value, state);\r\n                let ivalue: string | null = getCheckBoxValue(inputElement);\r\n                if (inputElement.checked) {\r\n                  data.push(ivalue);\r\n                } else {\r\n                  const newData = Store.proxyArray(\r\n                    data.filter((d: any) => d !== ivalue)\r\n                  );\r\n                  this._setDate(value, newData, state);\r\n                }\r\n              });\r\n            }\r\n          } else if (inputElement.type === \"radio\") {\r\n            // 单选按钮\r\n            autorun(() => {\r\n              const data = this._getData(value, state);\r\n              inputElement.checked = data === inputElement.value;\r\n            });\r\n\r\n            inputElement.addEventListener(\"change\", () => {\r\n              let newData = inputElement.value;\r\n              if (newData === \"on\") newData = \"\";\r\n              this._setDate(value, newData, state);\r\n              inputElement.checked = true;\r\n            });\r\n          } else {\r\n            // 其它\r\n            autorun(() => {\r\n              inputElement.value = `${this._getData(value, state)}`;\r\n            });\r\n            inputElement.addEventListener(\"input\", () => {\r\n              this._setDate(value, inputElement.value, state);\r\n            });\r\n          }\r\n        } else if (nodeName === \"SELECT\") {\r\n          // 对比value\r\n          const selectElement = htmlElement as HTMLSelectElement;\r\n          // 稍微延迟下，因为内部的模板可能没有解析\r\n          setTimeout(() => {\r\n            autorun(() => {\r\n              const data = this._getData(value, state);\r\n\r\n              const selectOptions = Array.from(selectElement.options);\r\n              let notFind = true;\r\n              // 多选参数必须为 array\r\n              if (selectElement.multiple && arrayp(data)) {\r\n                selectElement.selectedIndex = -1;\r\n                for (let index = 0; index < selectOptions.length; index++) {\r\n                  const option = selectOptions[index];\r\n                  const v = option.value;\r\n                  if ((data as Array<any>).some(d => d === v)) {\r\n                    notFind = false;\r\n                    option.selected = true;\r\n                  }\r\n                }\r\n              } else {\r\n                // 没找到默认-1\r\n                const index = selectOptions.findIndex(op => op.value === data);\r\n                selectElement.selectedIndex = index;\r\n                notFind = false;\r\n              }\r\n              if (notFind) selectElement.selectedIndex = -1;\r\n            });\r\n          });\r\n          selectElement.addEventListener(\"change\", () => {\r\n            if (selectElement.multiple) {\r\n              const multipleValue = Array.from(selectElement.options)\r\n                .filter(op => op.selected)\r\n                .map(op => op.value);\r\n              this._setDate(value, multipleValue, state);\r\n            } else {\r\n              this._setDate(value, selectElement.value, state);\r\n            }\r\n          });\r\n        }\r\n        htmlElement.removeAttribute(name);\r\n      }\r\n    }\r\n    return depath;\r\n  }\r\n\r\n  /**\r\n   * * 循环解析子节点\r\n   * @param childNodes\r\n   * @param state\r\n   */\r\n  private _bindingChildrenAttrs(children: ChildNode[], state: State): any {\r\n    if (!children.length) return null;\r\n    const childNode: ChildNode = children[0];\r\n    // dom节点\r\n    if (elementNodep(childNode)) {\r\n      this._define(childNode as HTMLElement, state);\r\n    }\r\n    if (textNodep(childNode)) {\r\n      this._setTextContent(childNode, state);\r\n    }\r\n    return this._bindingChildrenAttrs(children.slice(1), state);\r\n  }\r\n\r\n  /**\r\n   * * 解析文本节点的插值表达式\r\n   * @param childNode\r\n   * @param state\r\n   */\r\n  private _setTextContent(childNode: ChildNode, state: State): void {\r\n    // 创建一个变量保存源文本\r\n    let _initTextContent = childNode.textContent || emptyString;\r\n\r\n    // 文本不包含插值表达式的，那么就跳过\r\n    if (!interpolationExpressionExp.test(_initTextContent)) return;\r\n    autorun(() => {\r\n      childNode.textContent = _initTextContent.replace(\r\n        interpolationExpressionExp,\r\n        (match, g1) => {\r\n          // 获取插值表达式里面的文本 {{name}} -> name\r\n          const key = g1.replace(spaceExp, emptyString);\r\n\r\n          let _data = this._getData(key, state);\r\n          // 如果返回null字符，不好看\r\n          // hello null :(\r\n          // hello      :)\r\n          if (_data === null) return emptyString;\r\n          return typeof _data === \"string\"\r\n            ? _data\r\n            : JSON.stringify(_data, null, \" \");\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default Aja;\r\n"],"names":[],"mappings":"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"}